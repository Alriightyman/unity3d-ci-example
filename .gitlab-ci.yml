#image: gableroux/unity3d:2019.1.14f1

stages:
  - build_and_test
  - get_license
#  - deploy

variables:
  BUILD_NAME: ExampleProjectName
  UNITY_ACTIVATION_FILE: ./unity3d.alf
  UNITY_LICENSE_FILE: ./Unity_lic.ulf
#
#.unity_before_script: &unity_before_script
#  before_script:
#    - chmod +x ./ci/before_script.sh && ./ci/before_script.sh
#
#.cache: &cache
#  cache:
#    key: "$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$TEST_PLATFORM"
#    paths:
#      - Library/

# run this job when you need to request a license
# you may need to follow activation steps from documentation
get-activation-file:
#  when: manual
  stage: build_and_test
  script:
    - chmod +x ./ci/get_activation_file.sh && ./ci/get_activation_file.sh
  artifacts:
    paths:
      - $UNITY_ACTIVATION_FILE

get-license-file:
  stage: get_license
  image: gableroux/unity3d-activator:v1.0.1
  retry: 2 # this job sometimes fail for unknown reasons, trying it again sometimes help
  dependencies:
    - get-activation-file
  script:
    - node index.js
  artifacts:
    paths:
      - $UNITY_LICENSE_FILE
      - debug_images/

#.test: &test
#  stage: build_and_test
#  <<: *unity_before_script
#  <<: *cache
#  script:
#    - chmod +x ./ci/test.sh && ./ci/test.sh
#  artifacts:
#    paths:
#      - $(pwd)/$TEST_PLATFORM-results.xml
#
#test:
#  <<: *test
#  variables:
#    TEST_PLATFORM: playmode
#
#.build: &build
#  stage: build_and_test
#  <<: *unity_before_script
#  <<: *cache
#  script:
#    - chmod +x ./ci/build.sh && ./ci/build.sh
#  artifacts:
#    paths:
#      - ./Builds/
##tip: uncomment following lines if you'd like to build only on master branch
##   only:
##     - master
#
#build-StandaloneLinux64:
#  <<: *build
#  variables:
#    BUILD_TARGET: StandaloneLinux64
#
#build-StandaloneOSX:
#  <<: *build
#  variables:
#    BUILD_TARGET: StandaloneOSX
#
##Note: build target names changed in recent versions, use this for versions < 2017.2:
## build-StandaloneOSXUniversal:
##   <<: *build
##   variables:
##     BUILD_TARGET: StandaloneOSXUniversal
#
#build-StandaloneWindows64:
#  <<: *build
#  variables:
#    BUILD_TARGET: StandaloneWindows64
#
#build-WebGL:
#  <<: *build
#  variables:
#    BUILD_TARGET: WebGL
#
#build-android:
#  <<: *build
#  image: gableroux/unity3d:2019.1.14f1-android
#  variables:
#    BUILD_TARGET: Android
#
#pages:
#  image: alpine:latest
#  stage: deploy
#  script:
#    - mv "./Builds/WebGL/${BUILD_NAME}" public
#  artifacts:
#    paths:
#      - public
#  only:
#    - master
#
